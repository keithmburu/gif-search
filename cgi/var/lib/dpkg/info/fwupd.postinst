#!/bin/sh
set -e

# Automatically added by dh_installdeb/12.10ubuntu1
dpkg-maintscript-helper rm_conffile /etc/fwupd.conf 1.0.0\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/fwupd/remotes.d/fwupd.conf 1.2.7\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/dbus-1/system.d/org.freedesktop.fwupd.conf 1.3.2\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/modules-load.d/fwupd-msr.conf 1.5.3\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/modules-load.d/fwupd-platform-integrity.conf 1.5.3\~ -- "$@"
# End automatically added section
# Automatically added by dh_installsystemd/12.10ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'fwupd-refresh.timer' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'fwupd-refresh.timer'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'fwupd-refresh.timer' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'fwupd-refresh.timer' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/12.10ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'fwupd-offline-update.service' 'fwupd-refresh.service' 'fwupd-refresh.timer' 'fwupd.service' >/dev/null || true
	fi
fi
# End automatically added section


if dpkg-maintscript-helper supports rm_conffile 2>/dev/null; then
	dpkg-maintscript-helper rm_conffile \
		/etc/fwupd.conf 1.0.0~ -- "$@"
	dpkg-maintscript-helper rm_conffile \
		/etc/fwupd/remotes.d/fwupd.conf 1.2.7~ -- "$@"
	dpkg-maintscript-helper rm_conffile \
		/etc/dbus-1/system.d/org.freedesktop.fwupd.conf 1.3.2~ -- "$@"
	dpkg-maintscript-helper rm_conffile \
		/etc/fwupd/ata.conf 1.5.5~ -- "$@"
fi

#Perform transition from /etc/fwupd/uefi.conf to /etc/fwupd/uefi_capsule.conf
if dpkg-maintscript-helper supports mv_conffile 2>/dev/null; then
	ORIGINAL=/etc/fwupd/uefi.conf
	NEW=/etc/fwupd/uefi_capsule.conf
	#If already upgraded this file won't exist
	#If in the middle of an upgrade:
	# -> If unmodified then preinst would have renamed to /etc/fwupd/uefi.conf.dpkg-remove
	# -> If modified, we need to do an in-place upgrade with sed
	if [ -f $ORIGINAL ]; then
		sed "s,\[uefi\],\[uefi_capsule\]," -i $ORIGINAL
	fi
	dpkg-maintscript-helper mv_conffile $ORIGINAL $NEW 1.5.5~ -- "$@"
fi

# Clean up from fwupdate->fwupd transition
# This can be removed after bullseye and focal are released
EFIDIR=$(awk '/^ID=/ {gsub(/"/,""); split($$0,a,"="); print tolower(a[2])}' /etc/os-release)
if [ "${DPKG_MAINTSCRIPT_ARCH}" = "amd64" ]; then
	EFI_NAME=x64
elif [ "${DPKG_MAINTSCRIPT_ARCH}" = "i386" ]; then
	EFI_NAME=ia32
elif [ "${DPKG_MAINTSCRIPT_ARCH}" = "arm64" ]; then
	EFI_NAME=aa64
elif [ "${DPKG_MAINTSCRIPT_ARCH}" = "armhf" ]; then
	EFI_NAME=arm
fi
rm -f /boot/efi/EFI/$EFIDIR/fwup$EFI_NAME.efi
rm -f /var/lib/fwupdate/done
rm -f /var/cache/fwupdate/done
for dir in /var/cache/fwupdate /var/lib/fwupdate; do
	if [ -d $dir ]; then
	        rmdir --ignore-fail-on-non-empty $dir || true
	fi
done
